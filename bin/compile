#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
BUILD_DIR=$1
CACHE_DIR=$2

JETTY_WRAPPER_REPO="git://github.com/jesperfj/embedded-jetty.git"


# chdir as maven expects
cd $BUILD_DIR

# unpack cache
for DIR in ".m2" ".maven" ; do
  rm -rf $DIR
  if [ -d $CACHE_DIR/$DIR ]; then
    cp -r $CACHE_DIR/$DIR $DIR
  fi
done

# install maven with base repository
MAVEN_URL="http://s3.amazonaws.com/langpack-java/maven-04.tar.gz"

if [ ! -d .maven ]; then
  echo -n "-----> Installing Maven....."
  curl --silent --max-time 60 --location $MAVEN_URL | tar xz
  chmod +x .maven/bin/mvn
  echo " done"
fi

if [ ! -d .server ] ; then
  git clone $JETTY_WRAPPER_REPO .server
  echo "-----> Adding Jetty wrapper from $JETTY_WRAPPER_REPO"
else
  (cd .server ; git pull)
  echo "-----> Updated Jetty wrapper repo from $JETTY_WRAPPER_REPO"
fi


# build app
echo "-----> Building web app and Jetty wrapper with Maven..."
echo "-----> executing mvn -DskipTests -f .server/pom.xml clean package"
.maven/bin/mvn -B -Duser.home=$BUILD_DIR -DskipTests -f .server/pom.xml clean package 2>&1 | sed -u 's/^/       /'
if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to build app with Maven"
  exit 1
fi

if [ ! -e "Procfile" ] ; then
  WAR_FILE=`find target -name *.war`
  PROC="web:    java -cp `cat .server/runjetty/target/cp`:.server/runjetty/target/classes RunJetty $WAR_FILE`"
  echo $PROC > Procfile
  echo "-----> No Procfile found. Generating Procfile as:\n$PROC"
fi

# repack cache
mkdir -p $CACHE_DIR
for DIR in ".m2" ".maven" ".jetty"; do
  rm -rf $CACHE_DIR/$DIR
  cp -r $DIR $CACHE_DIR/$DIR
done
