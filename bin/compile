#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
. $BIN_DIR/common

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

export_env_dir $ENV_DIR

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

# install JDK
javaVersion=$(detect_java_version ${BUILD_DIR})
status_pending "Installing OpenJDK ${javaVersion}"
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
status_done

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

# change to cache dir to install maven
cd $CACHE_DIR
install_maven ${CACHE_DIR} ${BUILD_DIR}

if [ -n "$MAVEN_SETTINGS_PATH" ]; then
  MAVEN_SETTINGS_OPT="-s $MAVEN_SETTINGS_PATH"
elif [ -n "$MAVEN_SETTINGS_URL" ]; then
  status_pending "Installing settings.xml"
  mkdir -p .m2
  curl --silent --max-time 10 --location $MAVEN_SETTINGS_URL --output .m2/settings.xml
  status_done
  MAVEN_SETTINGS_OPT="-s $CACHE_DIR/.m2/settings.xml"
elif [ -f $BUILD_DIR/settings.xml ]; then
  MAVEN_SETTINGS_OPT="-s $BUILD_DIR/settings.xml"
else
  unset MAVEN_SETTINGS_OPT
fi

# change to build dir to run maven
cd $BUILD_DIR

export MAVEN_OPTS="-Xmx1024m"

# build app
BUILDCMD="$CACHE_DIR/.maven/bin/mvn -B"
BUILDCMD="$BUILDCMD -Duser.home=$BUILD_DIR"
BUILDCMD="$BUILDCMD -Dmaven.repo.local=$CACHE_DIR/.m2/repository"
BUILDCMD="$BUILDCMD $MAVEN_SETTINGS_OPT"
BUILDCMD="$BUILDCMD ${MAVEN_CUSTOM_OPTS:-"-DskipTests=true"}"
BUILDCMD="$BUILDCMD ${MAVEN_CUSTOM_GOALS:-"clean install"}"

status "executing $BUILDCMD"

$BUILDCMD 2>&1 | sed -u 's/^/       /'

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  error "Failed to build app with Maven"
fi
